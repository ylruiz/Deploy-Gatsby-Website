{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["indexQuery","Home","data","allMdx","edges","totalCount","numPages","Math","ceil","posts","filter","edge","node","frontmatter","date","map","key","id","post","t","useTranslation","title","className","i18nKey","currentPage"],"mappings":"4FAAA,uIAuDaA,EAAU,aAkCRC,UAhFF,SAAC,GAAc,IAAD,IAAXC,KACqBC,OAA3BC,EADiB,EACjBA,MAAOC,EADU,EACVA,WAGTC,EAAWC,KAAKC,KAAKH,EADN,GAGfI,EAAQL,EACXM,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKC,YAAYC,QACvCC,KAAI,SAAAJ,GAAI,OAAI,kBAAC,IAAD,CAAUK,IAAKL,EAAKC,KAAKK,GAAIC,KAAMP,EAAKC,UAE/CO,EAAMC,yBAAe,CAAC,iBAAtBD,EAER,OACE,kBAAC,IAAD,CAAQE,MAAOF,EAAE,cAAe,SAC9B,0BAAMF,GAAG,OAAOK,UAAU,QACxB,wBAAIA,UAAU,cACZ,kBAAC,QAAD,CAAOC,QAAQ,cAAf,aAEF,kBAAC,IAAD,MACCd,EACD,kBAAC,IAAD,CAAiBe,YAAa,EAAGlB,SAAUA","file":"component---src-pages-index-js-638de74b52329ca8586a.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport { Trans, useTranslation } from \"gatsby-plugin-react-i18next\"\r\nimport PropTypes from \"prop-types\"\r\nimport Layout from \"../components/Layout\"\r\nimport BlogCard from \"../components/BlogCard\"\r\nimport PaginationLinks from \"../components/PaginationLinks\"\r\nimport SubHeader from \"../components/SubHeader\"\r\n\r\nconst Home = ({ data }) => {\r\n  const { edges, totalCount } = data.allMdx\r\n\r\n  const postsPerPage = 6\r\n  const numPages = Math.ceil(totalCount / postsPerPage)\r\n\r\n  const posts = edges\r\n    .filter(edge => !!edge.node.frontmatter.date)\r\n    .map(edge => <BlogCard key={edge.node.id} post={edge.node} />)\r\n\r\n  const { t } = useTranslation([\"header, blog\"])\r\n\r\n  return (\r\n    <Layout title={t(\"header:BLOG\", \"BLOG\")}>\r\n      <main id=\"home\" className=\"blog\">\r\n        <h1 className=\"page-title\">\r\n          <Trans i18nKey=\"blog:title\">Articles</Trans>\r\n        </h1>\r\n        <SubHeader />\r\n        {posts}\r\n        <PaginationLinks currentPage={1} numPages={numPages} />\r\n      </main>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nHome.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMdx: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n            }),\r\n            fields: PropTypes.shape({\r\n              slug: PropTypes.string.isRequired,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport const indexQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMdx(sort: { order: DESC, fields: [frontmatter___date] }, limit: 6) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 250)\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            path\r\n            title\r\n            tags\r\n            categories\r\n            desc\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 1200) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`\r\n\r\nexport default Home\r\n"],"sourceRoot":""}