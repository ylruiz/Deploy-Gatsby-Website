{"version":3,"sources":["webpack:///./src/content/templates/tags.js"],"names":["Tags","data","allMdx","edges","totalCount","numPages","Math","ceil","className","i18nKey","map","node","slug","fields","key","post","currentPage","query"],"mappings":"4FAAA,kIAuDeA,UA9CF,SAAC,GAAc,IAAD,IAAXC,KACqBC,OAA3BC,EADiB,EACjBA,MAAOC,EADU,EACVA,WAGTC,EAAWC,KAAKC,KAAKH,EADN,GAGrB,OACE,kBAAC,IAAD,KACE,0BAAMI,UAAU,QACd,wBAAIA,UAAU,cAAa,kBAAC,QAAD,CAAOC,QAAQ,cAAf,aAC3B,kBAAC,IAAD,MAECN,EAAMO,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACR,OAAO,kBAAC,IAAD,CAAUE,IAAKF,EAAMG,KAAMJ,OAGpC,kBAAC,IAAD,CAAiBK,YAAa,EAAGX,SAAUA,OA+B5C,IAAMY,EAAK","file":"component---src-content-templates-tags-js-e66ded49c97828c267cb.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { graphql } from \"gatsby\"\r\nimport {Trans} from 'gatsby-plugin-react-i18next';\r\nimport Layout from \"../../components/Layout\"\r\nimport BlogCard from \"../../components/BlogCard\"\r\nimport PaginationLinks from \"../../components/PaginationLinks\"\r\nimport SubHeader from \"../../components/SubHeader\"\r\n\r\nconst Tags = ({ data }) => {\r\n  const { edges, totalCount } = data.allMdx\r\n\r\n  const postsPerPage = 6\r\n  const numPages = Math.ceil(totalCount / postsPerPage)\r\n\r\n  return (\r\n    <Layout>\r\n      <main className=\"blog\">\r\n        <h1 className=\"page-title\"><Trans i18nKey=\"blog:title\">Articles</Trans></h1>\r\n        <SubHeader />\r\n\r\n        {edges.map(({ node }) => {\r\n          const { slug } = node.fields\r\n          return <BlogCard key={slug} post={node} />\r\n        })}\r\n\r\n        <PaginationLinks currentPage={1} numPages={numPages} />\r\n      </main>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nTags.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMdx: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n            }),\r\n            fields: PropTypes.shape({\r\n              slug: PropTypes.string.isRequired,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const query = graphql`\r\n  query($tag: String) {\r\n    allMdx(\r\n      limit: 6\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 250)\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            path\r\n            title\r\n            tags\r\n            categories\r\n            desc\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 1200) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}